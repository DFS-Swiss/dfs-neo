// Mocks generated by Mockito 5.2.0 from annotations
// in neo/test/helpers/test_helpers.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:amazon_cognito_identity_dart_2/cognito.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:neo/services/cognito_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [CognitoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCognitoService extends _i1.Mock implements _i2.CognitoService {
  @override
  _i3.Future<_i4.CognitoUser?> getCurrentPoolUser() =>
      (super.noSuchMethod(Invocation.method(#getCurrentPoolUser, []),
              returnValue: Future<_i4.CognitoUser?>.value())
          as _i3.Future<_i4.CognitoUser?>);
}

/// A class which mocks [CognitoIdToken].
///
/// See the documentation for Mockito's code generation for more information.
class MockCognitoIdToken extends _i1.Mock implements _i4.CognitoIdToken {
  @override
  set jwtToken(String? _jwtToken) =>
      super.noSuchMethod(Invocation.setter(#jwtToken, _jwtToken),
          returnValueForMissingStub: null);
  @override
  set payload(dynamic _payload) =>
      super.noSuchMethod(Invocation.setter(#payload, _payload),
          returnValueForMissingStub: null);
  @override
  int getAuthTime() =>
      (super.noSuchMethod(Invocation.method(#getAuthTime, []), returnValue: 0)
          as int);
  @override
  int getExpiration() =>
      (super.noSuchMethod(Invocation.method(#getExpiration, []), returnValue: 0)
          as int);
  @override
  int getIssuedAt() =>
      (super.noSuchMethod(Invocation.method(#getIssuedAt, []), returnValue: 0)
          as int);
}
